# Switches a activar /desactivar
ehcache.enabled = true
security.jwt.enabled = true
security.oauth2.enabled = false

# Comentar siguiente linea cuando no sea Oauth2
#security.oauth2.resource.filter-order=3
security.ldap.enabled = false
security.oauth2server.enabled = false
multiple.connection.enabled = false
log.proceso.enabled = true

# JPA / HIBERNATE
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.database.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url = jdbc:postgresql://b2baprovisionador.postgres.database.azure.com:5432/oferta?sslmode=require
spring.datasource.username = scrum_master@b2baprovisionador
spring.datasource.password = Castle16

hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
hibernate.show_sql=true

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.maximumPoolSize=10
spring.datasource.hikari.idleTimeout=3000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=20000
spring.datasource.hikari.connectionTimeout=3000