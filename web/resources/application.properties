# WEB SERVER
#server.port=8084
server.port=8080
#server.contextPath=/swagger2

spring.thymeleaf.cache=false
spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.serialization.write-dates-as-timestamps=false

#spring.profiles.active = de
log.proceso.enabled=true

user.b2b=ADMIN

# Spring Actuator
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.exclude=loggers
management.endpoints.health.sensitive=false
management.health.db.enabled=true
management.health.defaults.enabled=true
management.endpoint.health.show-details=always

portal.store.sastoken=?sv=2019-10-10&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-12-31T07:22:46Z&st=2020-05-18T23:22:46Z&spr=https&sig=tQVrulnzM5beKSRYnAxIhJxBWDar9Qh9U6vAsmpzqJM%3D
portal.store.container=assets
portal.store.endpoint=https://b2barchivos.blob.core.windows.net/
portal.store.containerName=b2bassets

spring.jpa.database=postgresql 
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_schema=public
spring.database.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.proc.param_null_passing=true

#spring.datasource.url = jdbc:postgresql://192.168.211.128:5432/ofertas?sslmode=require
#spring.datasource.username = postgres
#spring.datasource.password = sqladmin

#spring.datasource.url = jdbc:postgresql://localhost:5432/ofertas_dev
#spring.datasource.username = postgres
#spring.datasource.password = hugooliveros

spring.datasource.url = jdbc:postgresql://b2bbase.postgres.database.azure.com:5432/ofertas?sslmode=require
spring.datasource.username = sdiob2b@b2bbase
spring.datasource.password = Castle16

#spring.datasource.url=jdbc:postgresql://b2bbase.postgres.database.azure.com:5432/ofertas?sslmode=require
#spring.datasource.username=sdiob2b@b2bbase
#spring.datasource.password=ENC(/W3onwhru+z+aUhq5CvP79GLul89PmfP)
#jasypt.encryptor.password=SimplePassword

hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
hibernate.show_sql=true

# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.maximumPoolSize=10

#spring.datasource.hikari.idleTimeout=3000
spring.datasource.hikari.idleTimeout=0
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=20000

#spring.datasource.hikari.connectionTimeout=3000
spring.datasource.hikari.connectionTimeout=0

# JWT
jwt.header=Authorization
jwt.secret=mySecret
jwt.expiration=6000
jwt.route.authentication.path=/auth
jwt.route.authentication.refresh=refresh

##### Prop. of the Multipart File ####
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.enabled=true
server.tomcat.max-swallow-size=-1
